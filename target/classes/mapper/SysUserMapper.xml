<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tony.admin.web.sys.mapper.SysUserMapper">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.tony.admin.web.sys.model.SysUser" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="loginName" column="login_name"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="mobile" column="mobile"/>
        <result property="enabled" column="enabled"/>
        <result property="remarks" column="remarks"/>
        <result property="createTime" column="create_time"/>
        <result property="opTime" column="op_time"/>
        <result property="delFlag" column="del_flag"/>
    </resultMap>
    
    <sql id="selectColumns">
  		select 
  		id,   		
  		login_name,   		
  		password,   		
  		name,   		
  		email,   		
  		phone,   		   		
  		mobile,
  		avatar,
  		enabled,
  		status,
  		nick,
  		sign,
  		remarks,   		
  		create_time,   		
  		op_time,   		
  		del_flag  		
  		from sys_user a
	</sql>

	<!-- 保存用户信息 -->
    <update id="updateInfo">
        UPDATE sys_user
        <set>
            name = #{name},
            email = #{email},
            phone = #{phone},
            mobile = #{mobile},
            avatar = #{avatar},
            nick = #{nick},
            sign = #{sign},
            op_time = #{opTime},
            remarks = #{remarks}
        </set>
        WHERE id = #{id}
    </update>

    <!-- 更新用户密码 -->
    <update id="updatePasswordById">
        UPDATE sys_user
        SET
            password = #{password}
        WHERE id = #{id}
    </update>

    <!-- 删除用户和角色关联表数据 -->
    <delete id="deleteUserRole">
        DELETE FROM sys_user_role
        WHERE user_id = #{id}
    </delete>

    <!-- 插入用户和角色关联表数据 -->
    <insert id="insertUserRole">
        INSERT INTO sys_user_role(user_id, role_id)
        <foreach collection="roles" item="role" separator=" union all ">
            SELECT #{id}, #{role.id} FROM dual
        </foreach>
    </insert>
    
    <select id="getAuthList" resultType="com.tony.admin.web.sys.model.SysRole">
    	SELECT
			b.id as id,
			b.code as code,
			b.name as name
		FROM
			sys_user_role a
		INNER JOIN sys_role b ON a.role_id = b.id and b.del_flag = '0'
		WHERE
			a.user_id = #{userId}
    </select>
    
    <select id="getUnAuthList" resultType="com.tony.admin.web.sys.model.SysRole">
        SELECT
			c.id as id,
			c.code as code,
			c.name as name
		FROM
			sys_role c
		WHERE
			c.del_flag = '0'
		AND c.id NOT IN (
			SELECT
				b.id AS id
			FROM
				sys_user_role a
			INNER JOIN sys_role b ON a.role_id = b.id
			AND b.del_flag = '0'
			WHERE
				a.user_id = #{userId}
		)
    </select>
    
    <insert id="addAuthInfo" parameterType="Map">
        INSERT INTO sys_user_role(user_id, role_id) values(#{userId}, #{roleId});
    </insert>
    
    <!-- 删除用户和角色关联表数据 -->
    <delete id="cancelAuthInfo" parameterType="Map">
        DELETE FROM sys_user_role
        WHERE user_id = #{userId} and role_id = #{roleId}
    </delete>
    
    <!-- 根据登录名查询用户 -->
    <select id="getByLoginName" resultType="com.tony.admin.web.sys.model.SysUser">
        <include refid="selectColumns"/>
        WHERE a.login_name = #{loginName}
    </select>

</mapper>